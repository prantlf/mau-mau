"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{"default":e}}function _toConsumableArray(e){if(Array.isArray(e)){for(var r=0,a=Array(e.length);r<e.length;r++)a[r]=e[r];return a}return Array.from(e)}function parseIntegerArgument(e,r){if(e){var a=parseInt(e,10);return isNaN(a)&&(console.log('Invalid argument: "'+e+'"'),process.exit(-1)),a}return r}function parseBooleanArgument(e,r){if(e){switch(e.trim().toLowerCase()){case"yes":return!0;case"no":return!1}console.log('Invalid argument: "'+e+'"'),process.exit(-1)}return r}function getComputers(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,new _SmartComputer2["default"];case 2:return e.next=4,new _AverageComputer2["default"];case 4:return e.next=6,new _DummyComputer2["default"];case 6:e.next=0;break;case 8:case"end":return e.stop()}},_marked[0],this)}Object.defineProperty(exports,"__esModule",{value:!0});var _Game=require("../engine/game/Game"),_Game2=_interopRequireDefault(_Game),_Human=require("../engine/players/Human"),_Human2=_interopRequireDefault(_Human),_DummyComputer=require("../engine/players/DummyComputer"),_DummyComputer2=_interopRequireDefault(_DummyComputer),_AverageComputer=require("../engine/players/AverageComputer"),_AverageComputer2=_interopRequireDefault(_AverageComputer),_SmartComputer=require("../engine/players/SmartComputer"),_SmartComputer2=_interopRequireDefault(_SmartComputer),_Reporter=require("../engine/misc/Reporter"),_Reporter2=_interopRequireDefault(_Reporter),_ConsoleTracer=require("./console/ConsoleTracer"),_ConsoleTracer2=_interopRequireDefault(_ConsoleTracer),_ConsolePrompt=require("./console/ConsolePrompt"),_ConsolePrompt2=_interopRequireDefault(_ConsolePrompt),_i18n=require("../engine/misc/i18n"),_i18n2=_interopRequireDefault(_i18n),_marked=[getComputers].map(regeneratorRuntime.mark),commander=require("commander").version("0.1.0").description("Starts a new mau-mau card game, interacting on the console.  One-based\n  index of the winning player is returned as the program exit code.").usage("[option]").option("-p, --players <integer|list>","Player count (3 by default) or player list","3").option("-m, --human <integer>","One-based index of the human (no by default)",parseIntegerArgument).option("-s, --silent","No console output (false by default)").option("-l, --language <locale>","Translation of texts (env.LANG by default)").option("--continue-to-end <yes|no>","Play until the last player remains with some\n                              cards in his hand (yes by default)",parseBooleanArgument,!0).option("--cards-per-player <integer>","Number of cards that the players are dealt\n                              (4 by default)",parseIntegerArgument,4).option("--players-per-deck <integer>","Player threshold to add another card deck\n                              (4 by default; 5 means another deck)",parseIntegerArgument,4).on("--help",function(){console.log("  Player list is a comma-delimited list of player implementations:"),console.log('  "human", "smart", "average" and "dummy" identifiers are available.'),console.log('  The default player list is "smart,average,dummy".');var e=_i18n2["default"].getTranslations(),r=Object.keys(e.seven);console.log('  Supported locales: "en", "'+r.join('", "')+'".')}).parse(process.argv),locale=/^[a-zA-Z]+/.exec(commander.language||process.env.LANG||"en");if(locale){var translations=_i18n2["default"].getTranslations();locale=locale[0],"en"!==locale&&(translations.seven[locale]?_i18n2["default"].setLocale(locale):(console.log('Unsupported locale: "'+locale+'"'),console.log("English will be used instead.")))}var computers=getComputers(),playerClasses={human:_Human2["default"],smart:_SmartComputer2["default"],average:_AverageComputer2["default"],dummy:_DummyComputer2["default"]},players=parseInt(commander.players,10);isNaN(players)?players=commander.players.split(",").map(function(e){e=e.trim().toLowerCase();var r=playerClasses[e];return r||(console.log("Invalid player."),process.exit(-1)),new r}):(2>players&&(console.log("Two players are the minimum."),process.exit(-1)),(commander.human<1||commander.human>players)&&(console.log("Index of the human player out of the player count."),process.exit(-1)),players=[].concat(_toConsumableArray(Array(players).keys())).map(function(e){return e+1===commander.human?new _Human2["default"]:computers.next().value}));var prompt=new _ConsolePrompt2["default"],game=new _Game2["default"]({players:players,prompt:prompt,continueToEnd:commander.continueToEnd,cardsPerPlayer:commander.cardsPerPlayer,playersPerPack:commander.playersPerDeck});commander.silent||new _ConsoleTracer2["default"](new _Reporter2["default"](game)),game.on("game:cannot-draw-cards",function(){console.log("Cannot draw cards any more.  Take additional card decks, \ndeal fewer cards, or reduce the count of players."),process.exit(-1)}).on("game:finished",function(e){process.exit(game.players.indexOf(e)+1)}),exports["default"]=game.start.bind(game);
//# sourceMappingURL=play.js.map
